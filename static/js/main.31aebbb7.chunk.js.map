{"version":3,"sources":["components/Flashcard.jsx","components/Newcard.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Flashcard","jap","eng","cards","onDelete","flip","onClick","japanese","className","id","Newcard","engInput","japaneseInput","engChange","japChange","htmlFor","name","value","onChange","App","shuffleArray","array","t","i","arrayCopy","slice","m","length","Math","floor","random","useState","window","localStorage","getItem","setItem","JSON","stringify","parse","allCards","setAllCards","randomizedCards","setRandomizedCards","setJapaneseInput","setEngInput","setFlip","allCardsCopy","randomizedCardsCopy","removedObject","shift","splice","deleteFlashcard","shiftRightAnswer","push","pushAndShiftWrongAnswer","event","target","newFlashcard","pushNewFlashcardToCardsArrayAndUpdateLocalStorage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAyBeA,EAxBG,SAAC,GAAuC,IAEpDC,EAAKC,EAFSC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,KAAOC,EAAa,EAAbA,QAO1C,OAHAL,EAAME,EAAM,GAAGI,SACfL,EAAMC,EAAM,GAAID,IAGd,sBAAKM,UAAU,OAAf,UACE,wBAAQA,UAAU,SAASF,QAASF,EAApC,oBACA,qBAAKE,QAASA,EAASE,UAAU,YAAjC,SACE,sBAAKA,UAAU,kBAAkBC,GAAIJ,EAArC,UACE,qBAAKG,UAAU,kBAAf,SACE,6BAAKP,MAEP,qBAAKO,UAAU,iBAAf,SACE,6BAAKN,eCFFQ,EAdC,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,UAAWR,EAAa,EAAbA,QAC/D,OAEE,sBAAKE,UAAU,OAAf,UACE,uBAAOO,QAAQ,WAAf,sBACA,0BAAUC,KAAK,WAAWP,GAAG,MAAMQ,MAAOL,EAAeM,SAAUJ,IACnE,uBAAOC,QAAQ,UAAf,qBACA,0BAAUC,KAAK,UAAUP,GAAG,MAAMQ,MAAON,EAAUO,SAAUL,IAC7D,wBAAQP,QAASA,EAAjB,+BCkKSa,MAnKf,WAoCE,IAAMC,EAAe,SAACC,GAMpB,IAJA,IAE0BC,EAAGC,EAFzBC,EAAYH,EAAMI,QAElBC,EAAIF,EAAUG,OAEZD,GACJH,EAAIK,KAAKC,MAAMD,KAAKE,SAAWJ,KAE/BJ,EAAIE,EAAUE,GACdF,EAAUE,GAAKF,EAAUD,GACzBC,EAAUD,GAAKD,EAGjB,OAAOE,GAlDI,EAkEmBO,oBAvCe,OAA5CC,OAAOC,aAAaC,QAAQ,aAC7BF,OAAOC,aAAaE,QAAQ,WALvBC,KAAKC,UAnBD,CACT,CACE9B,SAAU,yDACVL,IAAK,gBAEP,CACEK,SAAU,iCACVL,IAAK,0BAEP,CACEK,SAAU,iCACVL,IAAK,gBAEP,CACEK,SAAU,+DACVL,IAAK,0BAWAkC,KAAKE,MAAMN,OAAOC,aAAaC,QAAQ,eA9BnC,mBAkENK,EAlEM,KAkEIC,EAlEJ,OAoEiCT,mBAASX,EAAamB,IApEvD,mBAoENE,EApEM,KAoEWC,EApEX,OAsE6BX,mBAAS,IAtEtC,mBAsENnB,EAtEM,KAsES+B,EAtET,OAuEmBZ,mBAAS,IAvE5B,mBAuENpB,EAvEM,KAuEIiC,EAvEJ,OAyEWb,mBAAS,IAzEpB,mBAyEN1B,EAzEM,KAyEAwC,EAzEA,KAgIb,MAjDiC,qBAAvBJ,EAAgB,IAHxBC,EAAmBtB,EAAamB,IAqDhC,sBAAK/B,UAAU,MAAf,UACE,gCACE,cAAC,EAAD,CACEL,MAAOsC,EACPrC,SAAU,kBAhCM,WAMtB,IAJA,IAAI0C,EAAeP,EAASd,QACxBsB,EAAsBN,EAAgBhB,QACtCuB,EAAgBD,EAAoBE,QAEhC1B,EAAI,EAAGA,EAAIuB,EAAanB,OAAQJ,IACnCuB,EAAavB,GAAGrB,MAAQ8C,EAAc9C,KAAO4C,EAAanB,OAAS,GACpEmB,EAAaI,OAAO3B,EAAG,GAI3BiB,EAAYM,GACZJ,EAAmBK,GAEnBf,OAAOC,aAAaE,QAAQ,WAAYC,KAAKC,UAAUS,IAiBjCK,IAChB9C,KAAMA,EACNC,QAAS,WAbbuC,EADU,KAATxC,EACO,OAEA,OAaN,sBAAKG,UAAU,sBAAf,UACE,wBACEA,UAAU,UACVF,QAAS,kBAAMoC,EAtFA,SAACrB,GACxB,IAAIG,EAAYH,EAAMI,QAEtB,OADAD,EAAUyB,QACHzB,EAmFmC4B,CAAiBX,KAFrD,4BAMA,wBACEjC,UAAU,YACVF,QAAS,kBAAMoC,EAtFO,SAACrB,GAC/B,IAAIG,EAAYH,EAAMI,QAEtB,OADAD,EAAU6B,KAAK7B,EAAUyB,SAClBzB,EAmFmC8B,CAAwBb,KAF5D,kCAQJ,cAAC,EAAD,CACE9B,SAAUA,EACVC,cAAeA,EACfC,UAAW,SAAA0C,GAAK,OAAIX,EAAYW,EAAMC,OAAOvC,QAC7CH,UAAW,SAAAyC,GAAK,OAAIZ,EAAiBY,EAAMC,OAAOvC,QAClDX,QAAS,kBA1E2C,WACxD,IAAImD,EAAe,GAEnBA,EAAalD,SAAWK,EACxB6C,EAAavD,IAAMS,EAEnBgC,EAAiB,IACjBC,EAAY,IAEZ,IAAIE,EAAeP,EAASd,QAC5BqB,EAAaO,KAAKI,GAElBjB,EAAYM,GACZJ,EAAmBtB,EAAamB,IAEhCP,OAAOC,aAAaE,QAAQ,WAAYC,KAAKC,UAAUE,IA2DpCmB,UCzJRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.31aebbb7.chunk.js","sourcesContent":["\r\nconst Flashcard = ({cards, onDelete, flip,  onClick}) => {\r\n\r\n  var jap, eng;\r\n\r\n  jap = cards[0].japanese;\r\n  eng = cards[0]. eng;\r\n  \r\n  return (\r\n    <div className='card'>\r\n      <button className='delete' onClick={onDelete} >Delete</button>\r\n      <div onClick={onClick} className=\"flip-card\" >\r\n        <div className=\"flip-card-inner\" id={flip}>\r\n          <div className=\"flip-card-front\">\r\n            <h2>{jap}</h2>\r\n          </div>\r\n          <div className=\"flip-card-back\">\r\n            <h2>{eng}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Flashcard\r\n","\r\nconst Newcard = ({engInput, japaneseInput, engChange, japChange, onClick}) => {\r\n  return (\r\n\r\n    <div className='form'>\r\n      <label htmlFor='japanese' >Japanese</label>\r\n      <textarea name=\"japanese\" id=\"jap\" value={japaneseInput} onChange={japChange} ></textarea>\r\n      <label htmlFor=\"english\">English</label>\r\n      <textarea name=\"english\" id=\"eng\" value={engInput} onChange={engChange} ></textarea>\r\n      <button onClick={onClick} >Make New Card</button>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Newcard\r\n","// import * as f from './scripts/functions.js';\n\nimport React, { useState } from 'react';\n\nimport './App.css';\nimport Flashcard from './components/Flashcard';\nimport Newcard from './components/Newcard';\n\nfunction App() {\n\n  function makeNewlocalStorageObject(){\n\n  var Data = [\n    {\n      japanese: 'おはようございます',\n      eng: 'Good Morning'\n    },\n    {\n      japanese: 'こんにちは',\n      eng: 'Hello / Good Afternoon'\n    },\n    {\n      japanese: 'こんばんは',\n      eng: 'Good Evening'\n    },\n    {\n      japanese: 'ありがとうございます',\n      eng: 'Thank you very much'\n    },\n  ]\n\n  return JSON.stringify(Data);\n};\n\nfunction returnDataObjectIfExistsOrCreateDataObjectIfNot() {\n  if(window.localStorage.getItem('userData') === null) {\n    window.localStorage.setItem('userData', makeNewlocalStorageObject());\n  } else {\n    return JSON.parse(window.localStorage.getItem('userData'));\n  }\n\n  return JSON.parse(window.localStorage.getItem('userData'));\n};\n\n  const shuffleArray = (array) => {\n\n    var arrayCopy = array.slice();\n\n    var m = arrayCopy.length, t, i;\n\n    while(m) {\n      i = Math.floor(Math.random() * m--);\n\n      t = arrayCopy[m];\n      arrayCopy[m] = arrayCopy[i];\n      arrayCopy[i] = t;\n    }\n\n    return arrayCopy\n\n  }\n\n  const shiftRightAnswer = (array) => {\n    var arrayCopy = array.slice();\n    arrayCopy.shift();\n    return arrayCopy;\n  }\n\n  const pushAndShiftWrongAnswer = (array) => {\n    var arrayCopy = array.slice();\n    arrayCopy.push(arrayCopy.shift());\n    return arrayCopy;\n  }\n\n  const [allCards, setAllCards] = useState(returnDataObjectIfExistsOrCreateDataObjectIfNot())\n\n  const [randomizedCards, setRandomizedCards] = useState(shuffleArray(allCards))\n\n  const [japaneseInput, setJapaneseInput] = useState('');\n  const [engInput, setEngInput] = useState('');\n\n  const [flip, setFlip] = useState('');\n\n  const resetCardsState = () => {\n    setRandomizedCards(shuffleArray(allCards));\n  }\n\n  if(typeof randomizedCards[0] === 'undefined') {\n    resetCardsState();\n  }\n\n  const pushNewFlashcardToCardsArrayAndUpdateLocalStorage = () => {\n    var newFlashcard = {};\n\n    newFlashcard.japanese = japaneseInput;\n    newFlashcard.eng = engInput;\n\n    setJapaneseInput('');\n    setEngInput('');\n\n    var allCardsCopy = allCards.slice();\n    allCardsCopy.push(newFlashcard);\n\n    setAllCards(allCardsCopy);\n    setRandomizedCards(shuffleArray(allCards));\n\n    window.localStorage.setItem('userData', JSON.stringify(allCards));\n  }\n\n  const deleteFlashcard = () => {\n\n    var allCardsCopy = allCards.slice();\n    var randomizedCardsCopy = randomizedCards.slice();\n    var removedObject = randomizedCardsCopy.shift();\n\n    for(var i = 0; i < allCardsCopy.length; i++) {\n      if(allCardsCopy[i].eng === removedObject.eng && allCardsCopy.length > 1) {\n        allCardsCopy.splice(i, 1);\n      }\n    }\n\n    setAllCards(allCardsCopy);\n    setRandomizedCards(randomizedCardsCopy);\n\n    window.localStorage.setItem('userData', JSON.stringify(allCardsCopy));\n\n  }\n\n  const handleSetFlip = () => {\n    if(flip === '') {\n      setFlip('flip');\n    } else {\n      setFlip('');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Flashcard \n          cards={randomizedCards} \n          onDelete={() => deleteFlashcard()} \n          flip={flip}\n          onClick={() => handleSetFlip()} \n        />\n        <div className=\"right-wrong-buttons\">\n          <button\n            className='correct'\n            onClick={() => setRandomizedCards(shiftRightAnswer(randomizedCards))}\n          >\n            I got it right\n          </button>\n          <button\n            className='incorrect'\n            onClick={() => setRandomizedCards(pushAndShiftWrongAnswer(randomizedCards))}\n          >\n            I got it wrong\n          </button>\n        </div>\n      </div>\n      <Newcard \n        engInput={engInput} \n        japaneseInput={japaneseInput} \n        engChange={event => setEngInput(event.target.value)}\n        japChange={event => setJapaneseInput(event.target.value)}\n        onClick={() => pushNewFlashcardToCardsArrayAndUpdateLocalStorage()}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}